version: '3.4'

services:
  postgres:
    container_name: ${POSTGRES_DB_CONTAINER_NAME} 
    image: postgres:15.3
    restart: unless-stopped
    environment:
        DATABASE_HOST: ${POSTGRES_DATABASE_HOST}
        POSTGRES_USER: ${POSTGRES_USER_NAME}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DB_NAME}
    ports:
        - "${POSTGRES_PORT}:${POSTGRES_PORT}"

  pgAdmin:
    container_name: ${PGADMIN_CONTAINER_NAME}
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:${PGADMIN_PORT}"

  public_api:
    container_name: ${PUBLIC_API_CONTAINER_NAME}
    image: api/public_api:dev
    restart: unless-stopped
    ports:
      - "5166:${PUBLIC_API_CONTAINER_PORT}"
      - "7285:${PUBLIC_API_GRPC_CONTAINER_PORT}" 

    volumes:
      - ${HOST_LOGS}public_api/logs:${API_CONTAINER_LOGS} 
    entrypoint:
      - ASPNETCORE_URLS=http://+:${PUBLIC_API_CONTAINER_PORT};https://+:${PUBLIC_API_GRPC_CONTAINER_PORT}
      - GrpcPort=${PUBLIC_API_GRPC_CONTAINER_PORT}  
    build:
      context: .
      dockerfile: PublicApi/Dockerfile

  internal_api:
    container_name: ${INTERNAL_API_CONTAINER_NAME}
    image: api/internal_api:dev
    restart: unless-stopped
    ports:
      - "5240:${INTERNAL_API_CONTAINER_PORT}"
      - "7285:${INTERNAL_API_GRPC_CONTAINER_PORT}" 

    volumes:
      - ${HOST_LOGS}public_api/logs:${API_CONTAINER_LOGS} 
    entrypoint:
      - ASPNETCORE_URLS=http://+:${INTERNAL_API_CONTAINER_PORT};https://+:${INTERNAL_API_GRPC_CONTAINER_PORT}
      - GrpcPort=${INTERNAL_API_GRPC_CONTAINER_PORT}  
    build:
      context: .
      dockerfile: InternalApi/Dockerfile

