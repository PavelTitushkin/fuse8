version: '3.4'

services:
  postgres:
    container_name: ${POSTGRES_DB_CONTAINER_NAME} 
    image: postgres:15.3
    restart: unless-stopped
    environment:
        DATABASE_HOST: ${POSTGRES_DATABASE_HOST}
        POSTGRES_USER: ${POSTGRES_USER_NAME}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DB_NAME}
    ports:
        - "5432:${POSTGRES_PORT}"

  pgAdmin:
    container_name: ${PGADMIN_CONTAINER_NAME}
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:${PGADMIN_PORT}"

  internal_api:
    container_name: ${INTERNAL_API_CONTAINER_NAME}
    image: api/internal_api_image:dev
    restart: unless-stopped
    ports:
      - "5240:${INTERNAL_API_CONTAINER_PORT}"
      - "7285:${INTERNAL_API_GRPC_CONTAINER_PORT}" 

    environment:
      - ASPNETCORE_URLS=http://+:${INTERNAL_API_CONTAINER_PORT};http://+:${INTERNAL_API_GRPC_CONTAINER_PORT};
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - gRPCPort=${INTERNAL_API_GRPC_CONTAINER_PORT}  
      - ApiPort=${INTERNAL_API_CONTAINER_PORT}

    healthcheck:
      test: curl --fail http://localhost:5240/health || exit 1
      retries: 5
      start_period: 10s
      timeout: 10s
      start_interval: 10s
      interval: 15s

    build:
      context: .
      dockerfile: InternalApi/Dockerfile
  
    depends_on:
      postgres:
        condition: service_started

  public_api:
    container_name: ${PUBLIC_API_CONTAINER_NAME}
    image: api/public_api_image:dev
    restart: unless-stopped
    ports:
      - "5700:${PUBLIC_API_CONTAINER_PORT}"
    environment:
      - ASPNETCORE_URLS=http://+:${PUBLIC_API_CONTAINER_PORT};
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}

    healthcheck:
      test: curl --fail http://localhost:${PUBLIC_API_CONTAINER_PORT}/health || exit 1
      retries: 5
      start_period: 10s
      timeout: 10s
      start_interval: 10s
      interval: 15s

    build:
      context: .
      dockerfile: PublicApi/Dockerfile

    depends_on:
      internal_api:
        condition: service_healthy
      postgres:
        condition: service_started