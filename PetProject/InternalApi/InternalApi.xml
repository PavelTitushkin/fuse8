<?xml version="1.0"?>
<doc>
    <assembly>
        <name>InternalApi</name>
    </assembly>
    <members>
        <member name="T:InternalApi.Contracts.ICachedCurrencyAPI">
            <summary>
            Интерфейс для работы с CachedCurrencyAPI
            </summary>
        </member>
        <member name="M:InternalApi.Contracts.ICachedCurrencyAPI.GetCurrentCurrencyAsync(InternalApi.Models.ModelDTO.CurrencyType,System.Threading.CancellationToken)">
            <summary>
            Получает текущий курс
            </summary>
            <param name="currencyType">Валюта, для которой необходимо получить курс</param>
            <param name="cancellationToken">Токен отмены</param>
            <returns>Текущий курс</returns>
        </member>
        <member name="M:InternalApi.Contracts.ICachedCurrencyAPI.GetCurrencyOnDateAsync(InternalApi.Models.ModelDTO.CurrencyType,System.DateOnly,System.Threading.CancellationToken)">
            <summary>
            Получает курс валюты, актуальный на <paramref name="date"/>
            </summary>
            <param name="currencyType">Валюта, для которой необходимо получить курс</param>
            <param name="date">Дата, на которую нужно получить курс валют</param>
            <param name="cancellationToken">Токен отмены</param>
            <returns>Курс на дату</returns>
        </member>
        <member name="M:InternalApi.Contracts.ICachedCurrencyAPI.GetCurrentCurrencyFromDbAsync(InternalApi.Models.ModelDTO.CurrencyType,System.Threading.CancellationToken)">
            <summary>
            Получает текущий курс
            </summary>
            <param name="currencyType">Валюта, для которой необходимо получить курс</param>
            <param name="cancellationToken">Токен отмены</param>
            <returns>Текущий курс</returns>
        </member>
        <member name="M:InternalApi.Contracts.ICachedCurrencyAPI.GetCurrencyOnDateFromDbAsync(InternalApi.Models.ModelDTO.CurrencyType,System.DateOnly,System.Threading.CancellationToken)">
            <summary>
            Получает курс валюты, актуальный на <paramref name="date"/>
            </summary>
            <param name="currencyType">Валюта, для которой необходимо получить курс</param>
            <param name="date">Дата, на которую нужно получить курс валют</param>
            <param name="cancellationToken">Токен отмены</param>
            <returns>Курс на дату</returns>
        </member>
        <member name="M:InternalApi.Contracts.ICachedCurrencyAPI.AddNewBaseCurrencyToCacheTaskAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Добавляет новую базовую валюту
            </summary>
            <param name="newBaseCurrency">Новая базовая валюта</param>
            <param name="cancellationToken">Токен отмены</param>
            <returns>Объект состояния задачи</returns>
        </member>
        <member name="T:InternalApi.Contracts.ICurrencyAPI">
            <summary>
            Интерфейс расширяющий ICurrencyRateService 
            </summary>
        </member>
        <member name="M:InternalApi.Contracts.ICurrencyAPI.GetAllCurrentCurrenciesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Получает текущий курс для всех валют
            </summary>
            <param name="baseCurrency">Базовая валюта, относительно которой необходимо получить курс</param>
            <param name="cancellationToken">Токен отмены</param>
            <returns>Список курсов валют</returns>
        </member>
        <member name="M:InternalApi.Contracts.ICurrencyAPI.GetAllCurrenciesOnDateAsync(System.String,System.DateOnly,System.Threading.CancellationToken)">
            <summary>
            Получает курс для всех валют, актуальный на <paramref name="date"/>
            </summary>
            <param name="baseCurrency">Базовая валюта, относительно которой необходимо получить курс</param>
            <param name="date">Дата, на которую нужно получить курс валют</param>
            <param name="cancellationToken">Токен отмены</param>
            <returns>Список курсов валют на дату</returns>
        </member>
        <member name="T:InternalApi.Contracts.ICurrencyRateService">
            <summary>
            Интерфейс для работы с CurrencyRateService
            </summary>
        </member>
        <member name="M:InternalApi.Contracts.ICurrencyRateService.GetCurrencyAsync(System.Threading.CancellationToken)">
            <summary>
            Получает курс валюты по умолчанию относительно базовой
            </summary>
            <returns>Курс валюты.</returns>
        </member>
        <member name="M:InternalApi.Contracts.ICurrencyRateService.GetCurrencyAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Получает курс <paramref name="currencyCode"/> относительно базовой. 
            </summary>
            <param name="currencyCode">Код валюты</param>
            <returns>Курс валюты</returns>
        </member>
        <member name="M:InternalApi.Contracts.ICurrencyRateService.GetCurrencyAsync(System.String,System.DateTime,System.Threading.CancellationToken)">
            <summary>
            Получает курс <paramref name="currencyCode"/> относительно базовой на определённую <paramref name="date"/> 
            </summary>
            <param name="currencyCode">Код валюты</param>
            <param name="date">Дата, на которую нужно получить курс валют</param>
            <returns>Курс валюты на определённую дату</returns>
        </member>
        <member name="M:InternalApi.Contracts.ICurrencyRateService.GetCurrencySettingsAsync(System.Threading.CancellationToken)">
            <summary>
            Получает настройки API
            </summary>
            <returns>Настройки API</returns>
        </member>
        <member name="T:InternalApi.Controllers.CurrencyController">
            <summary>
            Методы получения курсов валют
            </summary>
        </member>
        <member name="M:InternalApi.Controllers.CurrencyController.#ctor(InternalApi.Contracts.ICurrencyRateService,InternalApi.Contracts.ICachedCurrencyAPI,Fuse8_ByteMinds.SummerSchool.InternalApi.Contracts.IQueues.IBackgroundTaskQueue)">
            <summary>
            Кноструктор
            </summary>
            <param name="currencyRateService">Сервис для работы с курсами валют</param>
            <param name="cachedCurrencyAPI">Сервис для работы данными кеша</param>
            <param name="taskQueue">Очередь</param>
        </member>
        <member name="M:InternalApi.Controllers.CurrencyController.GetCurrency(InternalApi.Models.ModelDTO.CurrencyType,System.Threading.CancellationToken)">
            <summary>
            Получает курс валюты <paramref name="currencyType"/>
            </summary>
            <param name="currencyType">Валюта, для которой необходимо получить курс</param>
            <param name="cancellationToken">Токен отмены</param>
            <returns>Курс валюты <paramref name="currencyType"/></returns>
        </member>
        <member name="M:InternalApi.Controllers.CurrencyController.GetCurrencyFromDb(InternalApi.Models.ModelDTO.CurrencyType,System.Threading.CancellationToken)">
            <summary>
            Получает курс валюты <paramref name="currencyType"/> из БД
            </summary>
            <param name="currencyType">Валюта, для которой необходимо получить курс</param>
            <param name="cancellationToken">Токен отмены</param>
            <returns>Курс валюты <paramref name="currencyType"/> из БД</returns>
        </member>
        <member name="M:InternalApi.Controllers.CurrencyController.GetCurrencyOnDate(InternalApi.Models.ModelDTO.CurrencyType,System.DateOnly,System.Threading.CancellationToken)">
            <summary>
            Получает курс валюты <paramref name="currencyType"/> на <paramref name="date"/>
            </summary>
            <param name="currencyType">Код валюты относительно которого будет выведен курс</param>
            <param name="date">Дата, относительно которой выводится курс</param>
            <param name="cancellationToken">Токен отмены</param>
            <returns>Курс валюты <paramref name="currencyType"/> на <paramref name="date"/></returns>
        </member>
        <member name="M:InternalApi.Controllers.CurrencyController.GetCurrencyOnDateFromDb(InternalApi.Models.ModelDTO.CurrencyType,System.DateOnly,System.Threading.CancellationToken)">
            <summary>
            Получает курс валюты <paramref name="currencyType"/> на <paramref name="date"/> из БД
            </summary>
            <param name="currencyType">Код валюты относительно которого будет выведен курс</param>
            <param name="date">Дата, относительно которой выводится курс</param>
            <param name="cancellationToken">Токен отмены</param>
            <returns>Курс валюты <paramref name="currencyType"/> на <paramref name="date"/> из БД</returns>
        </member>
        <member name="M:InternalApi.Controllers.CurrencyController.Settings(System.Threading.CancellationToken)">
            <summary>
            Получает текущие настройки внешнего Api
            </summary>
            <param name="cancellationToken">Токен отмены</param>
            <returns>Настройки внешнего Api</returns>
        </member>
        <member name="M:InternalApi.Controllers.CurrencyController.RecalculateCurrencyCacheToNewBaseCurrency(System.String,System.Threading.CancellationToken)">
            <summary>
            Пересчитывает кэш курсов валбт относительно <paramref name="newBaseCurrency"/> новой базовой валюты
            </summary>
            <param name="newBaseCurrency">Новая базовая валюта</param>
            <param name="cancellationToken">Токен отмены</param>
            <returns>Пересчет кэша курсов валют</returns>
        </member>
        <member name="T:InternalApi.Models.ModelDTO.CurrencyDTO">
            <summary>
            Курс валюты
            </summary>
            <param name="CurrencyType">Валюта</param>
            <param name="Value">Значение курса</param>
        </member>
        <member name="T:InternalApi.Models.ModelResponse.Currency">
            <summary>
            Класс курса валют 
            </summary>
        </member>
        <member name="P:InternalApi.Models.ModelResponse.Currency.Code">
            <summary>
            Код валюты
            </summary>
        </member>
        <member name="P:InternalApi.Models.ModelResponse.Currency.Value">
            <summary>
            Значение валюты
            </summary>
        </member>
        <member name="T:InternalApi.Models.ModelResponse.CurrencyRateResponse">
            <summary>
            Класс для работы с ответом currencyApi
            </summary>
        </member>
        <member name="T:InternalApi.Models.ModelResponse.Meta">
            <summary>
            Класс для работы с ответом currencyApi
            </summary>
        </member>
        <member name="P:InternalApi.Models.ModelResponse.Meta.LastUpdatedAt">
            <summary>
            Дата курса валют
            </summary>
        </member>
        <member name="T:InternalApi.Models.ModelResponse.CodeValue">
            <summary>
            Класс для работы с ответом currencyApi
            </summary>
        </member>
        <member name="P:InternalApi.Models.ModelResponse.CodeValue.Code">
            <summary>
            Код валюты
            </summary>
        </member>
        <member name="P:InternalApi.Models.ModelResponse.CodeValue.Value">
            <summary>
            значение валюты
            </summary>
        </member>
        <member name="T:InternalApi.Models.ModelResponse.CurrencySettings">
            <summary>
            Класс для работы с ответом currencyApi, содержащий текущие настройки приложения
            </summary>
        </member>
        <member name="T:InternalApi.Models.ModelResponse.CurrencyWithDate">
            <summary>
            Класс курса валют 
            </summary>
        </member>
        <member name="P:InternalApi.Models.ModelResponse.CurrencyWithDate.Date">
            <summary>
            Дата курса валют
            </summary>
        </member>
        <member name="P:InternalApi.Models.ModelResponse.CurrencyWithDate.Code">
            <summary>
            Код валюты
            </summary>
        </member>
        <member name="P:InternalApi.Models.ModelResponse.CurrencyWithDate.Value">
            <summary>
            Значение валюты
            </summary>
        </member>
        <member name="T:InternalApi.Models.ModelResponse.SettingsResponse">
            <summary>
            Класс для работы с ответом currencyApi 
            </summary>
        </member>
        <member name="P:InternalApi.Models.ModelResponse.SettingsResponse.AccountId">
            <summary>
            Аккаунт id
            </summary>
        </member>
        <member name="T:InternalApi.Models.ModelResponse.Quotas">
            <summary>
            Лимит запросов
            </summary>
        </member>
        <member name="T:InternalApi.Models.ModelResponse.Month">
            <summary>
            Лимит запрос в месяц
            </summary>
        </member>
        <member name="P:InternalApi.Models.ModelResponse.Month.Total">
            <summary>
            Общее количество запросов
            </summary>
        </member>
        <member name="P:InternalApi.Models.ModelResponse.Month.Used">
            <summary>
            Использованное количество запросов
            </summary>
        </member>
        <member name="P:InternalApi.Models.ModelResponse.Month.Remaining">
            <summary>
            Оставшейся количество запросов
            </summary>
        </member>
        <member name="T:InternalApi.Services.CurrencyRateService">
            <summary>
            Сервис для работы с currencyApi
            </summary>
        </member>
        <member name="T:InternalApi.CurrencyServiceReflection">
            <summary>Holder for reflection information generated from Protos/CurrencyService.proto</summary>
        </member>
        <member name="P:InternalApi.CurrencyServiceReflection.Descriptor">
            <summary>File descriptor for Protos/CurrencyService.proto</summary>
        </member>
        <member name="T:InternalApi.CurrencyRequest">
            <summary>
            The request message containing the user's name.
            </summary>
        </member>
        <member name="F:InternalApi.CurrencyRequest.CurrencyCodeFieldNumber">
            <summary>Field number for the "currencyCode" field.</summary>
        </member>
        <member name="F:InternalApi.CurrencyOnDateRequest.CurrencyCodeFieldNumber">
            <summary>Field number for the "currencyCode" field.</summary>
        </member>
        <member name="F:InternalApi.CurrencyOnDateRequest.DateFieldNumber">
            <summary>Field number for the "date" field.</summary>
        </member>
        <member name="F:InternalApi.CurrencyFavoriteRequest.CurrencyFieldNumber">
            <summary>Field number for the "currency" field.</summary>
        </member>
        <member name="F:InternalApi.CurrencyFavoriteRequest.BaseCurrencyFieldNumber">
            <summary>Field number for the "baseCurrency" field.</summary>
        </member>
        <member name="F:InternalApi.CurrencyFavoriteOnDateRequest.CurrencyFieldNumber">
            <summary>Field number for the "currency" field.</summary>
        </member>
        <member name="F:InternalApi.CurrencyFavoriteOnDateRequest.BaseCurrencyFieldNumber">
            <summary>Field number for the "baseCurrency" field.</summary>
        </member>
        <member name="F:InternalApi.CurrencyFavoriteOnDateRequest.DateFieldNumber">
            <summary>Field number for the "date" field.</summary>
        </member>
        <member name="T:InternalApi.CurrencyResponse">
            <summary>
            The response message containing the greetings.
            </summary>
        </member>
        <member name="F:InternalApi.CurrencyResponse.CodeFieldNumber">
            <summary>Field number for the "code" field.</summary>
        </member>
        <member name="F:InternalApi.CurrencyResponse.ValueFieldNumber">
            <summary>Field number for the "value" field.</summary>
        </member>
        <member name="F:InternalApi.ApiSettingsResponse.BaseCodeFieldNumber">
            <summary>Field number for the "baseCode" field.</summary>
        </member>
        <member name="F:InternalApi.ApiSettingsResponse.LimitFieldNumber">
            <summary>Field number for the "limit" field.</summary>
        </member>
        <member name="F:InternalApi.CurrencyFavoriteResponse.CurrencyFieldNumber">
            <summary>Field number for the "currency" field.</summary>
        </member>
        <member name="F:InternalApi.CurrencyFavoriteResponse.BaseCurrencyFieldNumber">
            <summary>Field number for the "baseCurrency" field.</summary>
        </member>
        <member name="F:InternalApi.CurrencyFavoriteResponse.ValueFieldNumber">
            <summary>Field number for the "value" field.</summary>
        </member>
        <member name="F:InternalApi.CurrencyFavoriteOnDateResponse.CurrencyFieldNumber">
            <summary>Field number for the "currency" field.</summary>
        </member>
        <member name="F:InternalApi.CurrencyFavoriteOnDateResponse.BaseCurrencyFieldNumber">
            <summary>Field number for the "baseCurrency" field.</summary>
        </member>
        <member name="F:InternalApi.CurrencyFavoriteOnDateResponse.ValueFieldNumber">
            <summary>Field number for the "value" field.</summary>
        </member>
        <member name="F:InternalApi.CurrencyFavoriteOnDateResponse.DateFieldNumber">
            <summary>Field number for the "date" field.</summary>
        </member>
        <member name="T:InternalApi.CurrrncyGrpsService">
            <summary>
            The greeting service definition.
            </summary>
        </member>
        <member name="P:InternalApi.CurrrncyGrpsService.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:InternalApi.CurrrncyGrpsService.CurrrncyGrpsServiceBase">
            <summary>Base class for server-side implementations of CurrrncyGrpsService</summary>
        </member>
        <member name="M:InternalApi.CurrrncyGrpsService.CurrrncyGrpsServiceBase.GetCurrency(InternalApi.CurrencyRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Sends a greeting
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:InternalApi.CurrrncyGrpsService.BindService(InternalApi.CurrrncyGrpsService.CurrrncyGrpsServiceBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:InternalApi.CurrrncyGrpsService.BindService(Grpc.Core.ServiceBinderBase,InternalApi.CurrrncyGrpsService.CurrrncyGrpsServiceBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="T:Fuse8_ByteMinds.SummerSchool.InternalApi.Contracts.IQueues.IBackgroundTaskQueue">
            <summary>
            Интерфейс очереди фоновой задачи  
            </summary>
        </member>
        <member name="M:Fuse8_ByteMinds.SummerSchool.InternalApi.Contracts.IQueues.IBackgroundTaskQueue.QueueAsync(Fuse8_ByteMinds.SummerSchool.InternalApi.Contracts.IQueues.WorkItem)">
            <summary>
            Добавить задачу в очередь
            </summary>
            <param name="command">Задача</param>
            <returns>Операция записи</returns>
        </member>
        <member name="M:Fuse8_ByteMinds.SummerSchool.InternalApi.Contracts.IQueues.IBackgroundTaskQueue.DequeueAsync(System.Threading.CancellationToken)">
            <summary>
            Получить задачу из очереди
            </summary>
            <param name="cancellationToken">Токен отмены</param>
            <returns>Операция чтения</returns>
        </member>
        <member name="T:Fuse8_ByteMinds.SummerSchool.InternalApi.Contracts.IQueues.WorkItem">
            <summary>
            Класс представляющий задачу
            </summary>
        </member>
        <member name="M:Fuse8_ByteMinds.SummerSchool.InternalApi.Contracts.IQueues.WorkItem.#ctor(System.Guid,Fuse8_ByteMinds.SummerSchool.InternalApi.Models.ModelDTO.CacheTackStatusDTO)">
            <summary>
            Конструктор класс представляющего задачу
            </summary>
            <param name="id">идентификатор задачи</param>
            <param name="status">Статус задачи</param>
        </member>
        <member name="P:Fuse8_ByteMinds.SummerSchool.InternalApi.Contracts.IQueues.WorkItem.Id">
            <summary>
            Идентификатор задачи
            </summary>
        </member>
        <member name="P:Fuse8_ByteMinds.SummerSchool.InternalApi.Contracts.IQueues.WorkItem.Status">
            <summary>
            Статус задачи
            </summary>
        </member>
        <member name="T:Fuse8_ByteMinds.SummerSchool.InternalApi.Contracts.IRecalculateCacheService">
            <summary>
            Интерфейс пересчёта кэша
            </summary>
        </member>
        <member name="M:Fuse8_ByteMinds.SummerSchool.InternalApi.Contracts.IRecalculateCacheService.RecalculateCacheAsync(Fuse8_ByteMinds.SummerSchool.InternalApi.Contracts.IQueues.WorkItem,System.Threading.CancellationToken)">
            <summary>
            Пересчитывает кэш
            </summary>
            <param name="workItem">Задача</param>
            <param name="cancellationToken">Токен отмены</param>
            <returns>Пересчет кэша</returns>
        </member>
        <member name="T:Fuse8_ByteMinds.SummerSchool.InternalApi.Contracts.IRepositories.ICachedCurrencyRepository">
            <summary>
            Интерфейс для работы CachedCurrencyRepository
            </summary>
        </member>
        <member name="M:Fuse8_ByteMinds.SummerSchool.InternalApi.Contracts.IRepositories.ICachedCurrencyRepository.GetCurrentCurrenciesAsync(System.Threading.CancellationToken)">
            <summary>
            Получает список валют
            </summary>
            <param name="cancellationToken">Токен отмены</param>
            <returns>Список валют</returns>
        </member>
        <member name="M:Fuse8_ByteMinds.SummerSchool.InternalApi.Contracts.IRepositories.ICachedCurrencyRepository.GetCurrenciesOnDateAsync(System.DateOnly,System.Threading.CancellationToken)">
            <summary>
            Получает список валют относительно <paramref name="date"/>
            </summary>
            <param name="date">Дата, на которую нужно получить курс валют</param>
            <param name="cancellationToken">Токен отмены</param>
            <returns>Список валют</returns>
        </member>
        <member name="M:Fuse8_ByteMinds.SummerSchool.InternalApi.Contracts.IRepositories.ICachedCurrencyRepository.GetCurrentCurrenciesFromDbAsync(System.Threading.CancellationToken)">
            <summary>
            Получает список валют
            </summary>
            <param name="cancellationToken">Токен отмены</param>
            <returns>Список валют</returns>
        </member>
        <member name="M:Fuse8_ByteMinds.SummerSchool.InternalApi.Contracts.IRepositories.ICachedCurrencyRepository.GetCurrenciesOnDateFromDbAsync(System.DateOnly,System.Threading.CancellationToken)">
            <summary>
            Получает список валют относительно <paramref name="date"/>
            </summary>
            <param name="date">Дата, на которую нужно получить курс валют</param>
            <param name="cancellationToken">Токен отмены</param>
            <returns>Список валют</returns>
        </member>
        <member name="M:Fuse8_ByteMinds.SummerSchool.InternalApi.Contracts.IRepositories.ICachedCurrencyRepository.GetAllCurrenciesFromDbAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Получает все записи курсов валют
            </summary>
            <param name="newBaseCurrency">Новая базовая валюта</param>
            <param name="cancellationToken">Токен отмены</param>
            <returns>Список всех записей курсов валют</returns>
        </member>
        <member name="M:Fuse8_ByteMinds.SummerSchool.InternalApi.Contracts.IRepositories.ICachedCurrencyRepository.AddNewBaseCurrencyToCacheTaskAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Добавляет задачу для пересчета кэша относительно новой базой валюты 
            </summary>
            <param name="newBaseCurrency">Базовая валюта</param>
            <param name="cancellationToken">Токен отмены</param>
            <returns>Объект состояния задачи</returns>
        </member>
        <member name="M:Fuse8_ByteMinds.SummerSchool.InternalApi.Contracts.IRepositories.ICachedCurrencyRepository.GetTaskFromCacheTaskAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Получает задачу по уникальному индентификатору <paramref name="id"/>
            </summary>
            <param name="id">Уникальный индентификатор</param>
            <param name="cancellationToken">Токен отмены</param>
            <returns>Объект состояния задачи</returns>
        </member>
        <member name="M:Fuse8_ByteMinds.SummerSchool.InternalApi.Contracts.IRepositories.ICachedCurrencyRepository.ChangeStatusTaskToCacheTaskAsync(Fuse8_ByteMinds.SummerSchool.InternalApi.Models.ModelDTO.CacheTaskDTO,System.Threading.CancellationToken)">
            <summary>
            Изменяет статус(состояние) задачи
            </summary>
            <param name="cacheTaskDTO">Объект состояния задачи</param>
            <param name="cancellationToken">Токен отмены</param>
            <returns>Изменение статуса(состояния задачи)</returns>
        </member>
        <member name="M:Fuse8_ByteMinds.SummerSchool.InternalApi.Contracts.IRepositories.ICachedCurrencyRepository.SaveNewCacheCurrenciesAsync(System.Collections.Generic.List{Fuse8_ByteMinds.SummerSchool.InternalApi.Models.ModelDTO.CurrenciesDTO},System.Threading.CancellationToken)">
            <summary>
            Сохраняет пересчитанный кэш в БД
            </summary>
            <param name="currencies">Список курсов валют</param>
            <param name="cancellationToken">Токен отмены</param>
            <returns>Сохранение результата пересчёта</returns>
        </member>
        <member name="M:Fuse8_ByteMinds.SummerSchool.InternalApi.Contracts.IRepositories.ICachedCurrencyRepository.GetUnfinishedTasksAsync(System.Threading.CancellationToken)">
            <summary>
            Получает не завершенные задачи
            </summary>
            <param name="cancellationToken">Токен отмены</param>
            <returns>Список не завершенных задач</returns>
        </member>
        <member name="T:Fuse8_ByteMinds.SummerSchool.InternalApi.Contracts.IRepositories.ICurrencyRepository">
            <summary>
            Интерфейс для работы с репозиториями
            </summary>
        </member>
        <member name="M:Fuse8_ByteMinds.SummerSchool.InternalApi.Contracts.IRepositories.ICurrencyRepository.GetCurrencyRateAsync(System.Threading.CancellationToken)">
            <summary>
            Получает курсы валют по умолчанию относительно базовой
            </summary>
            <returns>Ответ внешнего Api</returns>
        </member>
        <member name="M:Fuse8_ByteMinds.SummerSchool.InternalApi.Contracts.IRepositories.ICurrencyRepository.GetCurrencyRateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Получает курсы валют <paramref name="currencyCode"/> относительно базовой. 
            </summary>
            <param name="currencyCode">Код валюты</param>
            <returns>Ответ внешнего Api</returns>
        </member>
        <member name="M:Fuse8_ByteMinds.SummerSchool.InternalApi.Contracts.IRepositories.ICurrencyRepository.GetCurrencyOnDateRateAsync(System.String,System.DateTime,System.Threading.CancellationToken)">
            <summary>
            Получает курс валют <paramref name="currencyCode"/> относительно базовой на определённую <paramref name="date"/> 
            </summary>
            <param name="currencyCode">Код валюты</param>
            <param name="date">Дата, на которую нужно получить курс валют</param>
            <returns>Ответ внешнего Api</returns>
        </member>
        <member name="M:Fuse8_ByteMinds.SummerSchool.InternalApi.Contracts.IRepositories.ICurrencyRepository.GetCurrencySettingsAsync(System.Threading.CancellationToken)">
            <summary>
            Получает настройки внешнего Api
            </summary>
            <returns>Ответ внешнего Api</returns>
        </member>
        <member name="M:Fuse8_ByteMinds.SummerSchool.InternalApi.Contracts.IRepositories.ICurrencyRepository.GetCurrenciesRateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Получает текущий курс для всех валют
            </summary>
            <param name="baseCurrency">Базовая валюта, относительно которой необходимо получить курс</param>
            <param name="cancellationToken">Токен отмены</param>
            <returns>Ответ внешнего Api</returns>
        </member>
        <member name="M:Fuse8_ByteMinds.SummerSchool.InternalApi.Contracts.IRepositories.ICurrencyRepository.GetCurrenciesOnDateRateAsync(System.String,System.DateOnly,System.Threading.CancellationToken)">
            <summary>
            Получает курс для всех валют, актуальный на <paramref name="date"/>
            </summary>
            <param name="baseCurrency">Базовая валюта, относительно которой необходимо получить курс</param>
            <param name="date">Дата, на которую нужно получить курс валют</param>
            <param name="cancellationToken">Токен отмены</param>
            <returns>Ответ внешнего Api</returns>
        </member>
        <member name="T:Fuse8_ByteMinds.SummerSchool.InternalApi.Controllers.HealthCheckController">
            <summary>
            Методы для проверки работоспособности InternalApi
            </summary>
        </member>
        <member name="M:Fuse8_ByteMinds.SummerSchool.InternalApi.Controllers.HealthCheckController.Check(System.Nullable{System.Boolean})">
            <summary>
            Проверить что API работает
            </summary>
            <param name="checkExternalApi">Необходимо проверить работоспособность внешнего API. Если FALSE или NULL - проверяется работоспособность только текущего API</param>
            <response code="200">
            Возвращает если удалось получить доступ к API
            </response>
            <response code="400">
            Возвращает если удалось не удалось получить доступ к API
            </response>
        </member>
        <member name="T:Fuse8_ByteMinds.SummerSchool.InternalApi.Controllers.HealthCheckResult">
            <summary>
            Результат проверки работоспособности API
            </summary>
        </member>
        <member name="P:Fuse8_ByteMinds.SummerSchool.InternalApi.Controllers.HealthCheckResult.CheckedOn">
            <summary>
            Дата проверки
            </summary>
        </member>
        <member name="P:Fuse8_ByteMinds.SummerSchool.InternalApi.Controllers.HealthCheckResult.Status">
            <summary>
            Статус работоспособности API
            </summary>
        </member>
        <member name="T:Fuse8_ByteMinds.SummerSchool.InternalApi.Controllers.HealthCheckResult.CheckStatus">
            <summary>
            Статус API
            </summary>
        </member>
        <member name="F:Fuse8_ByteMinds.SummerSchool.InternalApi.Controllers.HealthCheckResult.CheckStatus.Ok">
            <summary>
            API работает
            </summary>
        </member>
        <member name="F:Fuse8_ByteMinds.SummerSchool.InternalApi.Controllers.HealthCheckResult.CheckStatus.Failed">
            <summary>
            Ошибка в работе API
            </summary>
        </member>
    </members>
</doc>
